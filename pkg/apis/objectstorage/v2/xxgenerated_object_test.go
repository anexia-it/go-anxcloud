// Code generated by go.anx.io/go-anxcloud/tools object-generator - DO NOT EDIT!

package v2_test

import (
	. "github.com/onsi/ginkgo/v2"
	testutils "go.anx.io/go-anxcloud/pkg/utils/test"

	"go.anx.io/go-anxcloud/pkg/api/types"
	apipkg "go.anx.io/go-anxcloud/pkg/apis/objectstorage/v2"
)

var _ = Describe("Object Bucket", func() {
	o := apipkg.Bucket{}

	ifaces := make([]interface{}, 0, 2)
	{
		var i types.Object
		ifaces = append(ifaces, &i)
	}
	{
		var i types.RequestBodyHook
		ifaces = append(ifaces, &i)
	}

	testutils.ObjectTests(&o, ifaces...)
})

var _ = Describe("Object Endpoint", func() {
	o := apipkg.Endpoint{}

	ifaces := make([]interface{}, 0, 2)
	{
		var i types.Object
		ifaces = append(ifaces, &i)
	}
	{
		var i types.RequestBodyHook
		ifaces = append(ifaces, &i)
	}

	testutils.ObjectTests(&o, ifaces...)
})

var _ = Describe("Object Key", func() {
	o := apipkg.Key{}

	ifaces := make([]interface{}, 0, 2)
	{
		var i types.Object
		ifaces = append(ifaces, &i)
	}
	{
		var i types.RequestBodyHook
		ifaces = append(ifaces, &i)
	}

	testutils.ObjectTests(&o, ifaces...)
})

var _ = Describe("Object Region", func() {
	o := apipkg.Region{}

	ifaces := make([]interface{}, 0, 2)
	{
		var i types.Object
		ifaces = append(ifaces, &i)
	}
	{
		var i types.RequestBodyHook
		ifaces = append(ifaces, &i)
	}

	testutils.ObjectTests(&o, ifaces...)
})

var _ = Describe("Object S3Backend", func() {
	o := apipkg.S3Backend{}

	ifaces := make([]interface{}, 0, 2)
	{
		var i types.Object
		ifaces = append(ifaces, &i)
	}
	{
		var i types.RequestBodyHook
		ifaces = append(ifaces, &i)
	}

	testutils.ObjectTests(&o, ifaces...)
})

var _ = Describe("Object Tenant", func() {
	o := apipkg.Tenant{}

	ifaces := make([]interface{}, 0, 2)
	{
		var i types.Object
		ifaces = append(ifaces, &i)
	}
	{
		var i types.RequestBodyHook
		ifaces = append(ifaces, &i)
	}

	testutils.ObjectTests(&o, ifaces...)
})

var _ = Describe("Object User", func() {
	o := apipkg.User{}

	ifaces := make([]interface{}, 0, 2)
	{
		var i types.Object
		ifaces = append(ifaces, &i)
	}
	{
		var i types.RequestBodyHook
		ifaces = append(ifaces, &i)
	}

	testutils.ObjectTests(&o, ifaces...)
})
